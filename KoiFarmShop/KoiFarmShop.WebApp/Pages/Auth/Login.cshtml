@page
@model KoiFarmShop.WebApp.Pages.Auth.LoginModel
@{
	Layout = null;
}
<html lang="en">
<head>
	<meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Login</title>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css">
	<style>
		body {
			background: linear-gradient(135deg, #4facfe, #00f2fe);
			height: 100vh;
			margin: 0;
			display: flex;
			justify-content: center;
			align-items: center;
			font-family: Arial, sans-serif;
			color: #333;
		}

		.login-container {
			background: #fff;
			padding: 40px;
			border-radius: 15px;
			box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
			max-width: 400px;
			width: 100%;
			text-align: center;
		}

			.login-container h2 {
				font-size: 28px;
				color: #333;
				font-weight: 600;
				margin-bottom: 30px;
			}

		.form-control {
			margin-bottom: 20px;
			border-radius: 10px;
			height: 45px;
		}

		.btn-login, .btn-outline-custom {
			width: 100%;
			padding: 12px;
			font-weight: bold;
			border-radius: 10px;
		}

		.btn-login {
			background-color: #4facfe;
			color: white;
			border: none;
		}

			.btn-login:hover {
				background-color: #00c6ff;
			}

		.btn-outline-custom {
			border: 2px solid #4facfe;
			color: #4facfe;
			margin-top: 10px;
		}

			.btn-outline-custom:hover {
				background-color: #4facfe;
				color: white;
			}

		.toggle-password {
			background: none;
			border: none;
			position: absolute;
			right: 15px;
			top: 10px;
			color: #666;
			cursor: pointer;
		}

		.links {
			margin-top: 20px;
			font-size: 14px;
		}

			.links a {
				color: #4facfe;
				text-decoration: none;
				font-weight: bold;
			}

				.links a:hover {
					text-decoration: underline;
				}
	</style>
</head>
<body>
	<div class="login-container">
		<h2>Welcome Back!</h2>
		@if (TempData["SuccessMessage"] != null)
		{
			<div class="alert alert-success" role="alert">
				@TempData["SuccessMessage"]
			</div>
		}
		<form method="post">
			@Html.AntiForgeryToken()
			<div class="form-group position-relative">
				@if (Model.ValidateErrors.ContainsKey("email"))
				{
					<div class="alert alert-danger" role="alert">
						@Model.ValidateErrors["email"]
					</div>
				}
				<input type="email" name="email" class="form-control" placeholder="Email" required />
			</div>

			<div class="form-group position-relative">
				@if (Model.ValidateErrors.ContainsKey("password"))
				{
					<div class="alert alert-danger" role="alert">
						@Model.ValidateErrors["password"]
					</div>
				}
				<input type="password" name="password" class="form-control" placeholder="Password" required id="password" />
				<button type="button" class="toggle-password" onclick="togglePassword()">👁️</button>
			</div>

			<button type="submit" class="btn btn-login">Login</button>
			<button type="reset" class="btn btn-outline-custom">Reset</button>
		</form>
		<div class="links mt-4">
			<a href="/Auth/ForgotPassword">Forgot Password?</a> |
			<a href="/Auth/Register">Create an Account</a>
		</div>
	</div>

	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>
	<script>
		function togglePassword() {
			const passwordField = document.getElementById("password");
			const type = passwordField.getAttribute("type") === "password" ? "text" : "password";
			passwordField.setAttribute("type", type);
		}
	</script>
</body>
</html>